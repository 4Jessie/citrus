 ------
 Development Quickstart
 ------

Development Quickstart

  This quickstart gets the Citrus project sources running in a few minutes,
  starting with initial git repository clone and ending with a built 
  Citrus project ready for coding.

* Preconditions

  * Git Client <<{{{http://git-scm.com/}http://git-scm.com/}}>> 
  
    This can be either a command line client or some graphical UI. For
    simplicity, we assume you have the command line client installed.

  * Java 1.5 (or higher version) 
  
    You can verify the Java installation via command line with
  
---
> java -version
java version "1.6.0_17"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.6.0_17)
Java HotSpot(TM) Client VM (build 1.6.0_17, mixed mode, sharing)
---

  * Maven 2.2.1 (or higher version)
  
    Download {{{http://maven.apache.org}maven}} and install Maven on your machine. 
    Please verify correct version and <<<MAVEN_HOME>>> setup using following command

---
> mvn -version
Maven version: 2.2.1
Java version: 1.6.0_17
Default locale: en_US, platform encoding: MacRoman
OS name: "mac os x" version: "10.6.2" arch: "x86_64" Family: "mac"
---

  * In case you want to use the Citrus TIBCO module in order to connect to TIBCO EMS or 
    TIBCO Collaborator you will need a TIBCO Active Matrix BusinessWorks installation 
    on your local machine. For more information about TIBCO see {{{http://www.tibco.com/}official website}}.
    
* Initial git clone

  You need to checkout the Citrus sources from our repository on GitHub ({{{http://www.github.com/}http://www.github.com/}}). 
  You can use the following command to do this

---
git clone git://github.com/christophd/citrus.git
---

  This will clone the git repository to the local directory
  <<<citrus>>>. In the following this project directory is referenced as
  <<<PROJECT_HOME>>>. For detailed instructions about git, please
  consult the official git website {{{http://git-scm.com/}http://git-scm.com/}}.
  
  Now we have to create a <<<profiles.xml>>> file in <<<PROJECT_HOME>>>. This file holds some
  project environment settings as properties. A template <<<profiles.xml.template>>> is provided as a starting
  point for creating the file. Unix or OS X users are lucky to simply call

---
  ./setup.sh
---

  which is doing the whole work for you. Note that you need to call <<<setup.sh>>> only once for 
  the <<<profiles.xml>>> generation.
  
* Build the Citrus artifacts

  Now everything is setup properly and you can use Maven2 for all the rest. Call

---
mvn install
---

  This runs the full build lifecycle creating all artifacts, especially the Citrus JAR files. 
  The <<install>> goal will also run all unit and integration tests included.

* Create IDE project files

  You can easily create the project files for your favorite IDE. For
  IntelliJ IDEA, in <<<PROJECT_HOME>>> call

---
mvn idea:idea
---

   for Eclipse, call

---
mvn eclipse:eclipse
---

  You are now ready for Citrus project import in your IDE. This is the preferred way for creating IDE project files. 
  Do not create IDE projects manually.