<?xml version="1.0" encoding="UTF-8"?>
<chapter id="cleanup">
    <title>Cleanup</title>

    <para>When dealing with database access as described in the previous chapter, we might run into some
    problems when the test fails. Imagine that you prepare the database at the beginning of your test and that
    you clean up the database at the end of the test. If any action between those preparing and cleaning
    tasks should fail the test aborts its execution. In this case the cleaning task will not be executed.</para>
    
    <para>This can cause problems for the next test cases, because the database may not be in adequate state. To
    avoid this problem you can define a finally block besides the usual action chain. The actions are used to
    declare the test actions as usual. Actions that have to be executed implicitly at the end of the test, even if
    the test fails, should be declared in the &lt;cleanup&gt; section. This cleanup will be executed at the end of the
    test in any case. Using this strategy the database cleaning task will be executed even in case of error.</para>
    
    <para>The following example shows how to use the cleanup section at the end of a test:</para>
  
    <programlisting>
    &lt;testcase name=&quot;finallyBlockTest_new&quot;&gt;
        &lt;variables&gt;
            &lt;variable name=&quot;orderId&quot; value=&quot;1&quot;/&gt;
            &lt;variable name=&quot;date&quot; value=&quot;citrus:currentDate('dd.MM.yyyy')&quot;/&gt;
        &lt;/variables&gt;
        &lt;actions&gt;
            &lt;updateDatabase connect=&quot;databaseAccess&quot;&gt;
                &lt;statement&gt;
                    INSERT INTO ORDERS VALUES (${orderId}, 1, 1, '${date}')
                &lt;/statement&gt;
            &lt;/updateDatabase&gt;
            
            &lt;echo&gt;
                &lt;message&gt;
                    ORDER creation time: ${date}
                &lt;/message&gt;
            &lt;/echo&gt;
        &lt;/actions&gt;
        &lt;cleanup&gt;
            &lt;updateDatabase connect=&quot;databaseAccess&quot;&gt;
                &lt;statement&gt;DELETE FROM ORDERS WHERE ORDER_ID='${orderId}'&lt;/statement&gt;
            &lt;/updateDatabase&gt;
        &lt;/cleanup&gt;
    &lt;/testcase&gt;
    </programlisting>
    
    <para>In the example the first action creates an order in the database using an INSERT SQL statement. After
    that some more actions might follow. Here it is a simple echo action that prints out some information. But
    there can be errors in these actions. To be sure that the option in the database is deleted after the test,
    the cleanup contains the respective action. This action will be executed even if the actions chain brakes
    due to errors.</para>
    
</chapter>