<?xml version="1.0" encoding="UTF-8"?>
<chapter id="introduction">
  <title>Introduction</title>

  <para>Enterprise Application Integration (EAI) projects usually communicate with different 
  interface partners using a loosely coupled message-based communication. The success of a use case is defined by 
  the cooperation of several applications exchanging information with each other. Therefore it is essential to test 
  this cooperation/communication between the applications in several integration tests.</para>
  
  <para>How can somebody test use case scenarios that include several interface partners? 
  How can somebody run positive and negative integration test cases in an automated reproducable way? 
  Citrus tries to answer these questions by offering fully automated integration testing.</para>

  <section id="introduction-overview">
    <title>Overview</title>

    <para>Citrus aims to strongly support you in simulating your interface partners. You can easily subscribe and publish 
    to a wide range of protocols like HTTP, JMS, TCP/IP and SOAP in order to test your message based applications. 
    The framework will send/receive messages to create a communication as it would be in real production environment. 
    In each step the framework is able to validate message contents to ensure the objective correctness. In addition to that 
    the framework offers a wide range of functionalities to take control of the process flow during a test (e.g. iterations, 
    system availability checks, database validation, parallelism).</para>
    
    <para>The basic goal is to test a whole use case scenario including all interface partners. With easy
    definition of test cases via XML the framework will simulate the message flow step by step and
    ensure the correct processing.</para>
  </section>

  <section id="introduction-usage">
    <title>Usage scenarios</title>

    <para>When should someone use the Citrus test framework? If you are in charge of an EAI application and need to test 
    its integration into the existing software landscape. In case you need to increase the stability of an existing EAI 
    projects against change requests and bugfixes. Or if you simply need to increase your test coverage, in order to feel 
    comfortable regarding the next release of your EAI application.</para>
  </section>
</chapter>