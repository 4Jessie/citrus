<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.consol.de/citrus/schema/testcase" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.consol.de/citrus/schema/testcase http://www.consol.de/citrus/schema/testcase/citrus-testcase-1.0.xsd">
    <testcase name="syncJmsCommunicationTest">
		<meta-info>
			<author>Christoph Deppisch</author>
			<creationdate>2008-04-25</creationdate>
			<status>FINAL</status>
			<lastUpdatedBy>Christoph Deppisch</lastUpdatedBy>
			<lastUpdatedOn>2008-04-25T00:00:00</lastUpdatedOn>
		</meta-info>
		
        <description>
			The test suit supports synchronous communication over jms when sending jms messages. Therefore you have to specify
			the additional "replyToQueue" property in your sending service bean, as shown below. If that
			property is present, the jms service will set the JMSReplyTo queue as property in the jms message. The receiver
			of the message will then directly send the answer back on this replyTo queue. So the respective receiving 
			service bean has to receive the message from this queue too, in order to get the message.
			
			This strategy imitates the real usage of the replyToQueue, becaus this queue is supposed to be
			a temporary queue in the first place. In the test suite the queue is not temporary, but the synchronous communication
			is guaranteed without any deficit.
		</description>
        <variables>
            <variable name="operation" value="GetCustomer"/>
            <variable name="requestTag" value="snycJmsComm___0001"/>
            <variable name="conversationId" value="A00002"/>
        </variables>
        <actions>
            <send with="sendGetCustomerRequest">
            	<description>
            		Send GetCustomerRequest to simulated Service: TestFramework -> Simulator
            	</description>
                <message>
                    <data><![CDATA[
															
								<RequestMessage>
									<MessageHeader>
										<ConversationId>_</ConversationId>
										<Timestamp>2001-12-17T09:30:47.0Z</Timestamp>
										<RequestTag>_</RequestTag>
										<VersionId>2</VersionId>
									</MessageHeader>
									<MessageBody>
										<Customer>
											<Id>1</Id>
										</Customer>
									</MessageBody>
								</RequestMessage>
							
						]]></data>
                    <element path="//RequestMessage/MessageHeader/RequestTag" value="${requestTag}"/>
                    <element path="//RequestMessage/MessageHeader/ConversationId" value="${conversationId}"/>
                </message>
                <header>
                    <element name="Operation" value="${operation}"/>
                    <element name="RequestTag" value="${requestTag}"/>
                </header>
            </send>
            <receive with="receiveGetCustomerResponse">
            	<description>
            		Receive GetCustomerResponse from simulated Service: Simulator -> TestFramework
            	</description>
                <message>
                    <data><![CDATA[
																								
								<ResponseMessage>
									<MessageHeader>
										<ConversationId>_</ConversationId>
										<Timestamp>_</Timestamp>
										<RequestTag>_</RequestTag>
										<VersionId>2</VersionId>
									</MessageHeader>
									<MessageBody>
										<Customer>
											<Id>1</Id>
											<Name>Deppisch</Name>
											<Firstname>Christoph</Firstname>
										</Customer>
									</MessageBody>
								</ResponseMessage>	
							
						]]></data>
                    <element path="//ResponseMessage/MessageHeader/RequestTag" value="${requestTag}"/>
                    <element path="//ResponseMessage/MessageHeader/ConversationId" value="${conversationId}"/>
                    <ignore path="//ResponseMessage/MessageHeader/Timestamp"/>
                </message>
                <extract>
                    <header name="Operation" variable="${operation}"/>
                    <header name="RequestTag" variable="${requestTag}"/>
                </extract>
            </receive>
            <send with="sendGetCustomerRequest">
            	<description>
            		Send GetCustomerRequest to simulated Service: TestFramework -> Simulator
            	</description>
                <message>
                    <data><![CDATA[
															
								<RequestMessage>
									<MessageHeader>
										<ConversationId>_</ConversationId>
										<Timestamp>2001-12-17T09:30:47.0Z</Timestamp>
										<RequestTag>_</RequestTag>
										<VersionId>2</VersionId>
									</MessageHeader>
									<MessageBody>
										<Customer>
											<Id>1</Id>
										</Customer>
									</MessageBody>
								</RequestMessage>
							
						]]></data>
                    <element path="//RequestMessage/MessageHeader/RequestTag" value="${requestTag}"/>
                    <element path="//RequestMessage/MessageHeader/ConversationId" value="${conversationId}"/>
                </message>
                <header>
                    <element name="Operation" value="${operation}"/>
                    <element name="RequestTag" value="${requestTag}"/>
                </header>
            </send>
            <receive with="receiveGetCustomerResponse">
            	<description>
            		Receive GetCustomerResponse from simulated Service: Simulator -> TestFramework
            	</description>
                <message>
                    <data><![CDATA[
																								
								<ResponseMessage>
									<MessageHeader>
										<ConversationId>_</ConversationId>
										<Timestamp>_</Timestamp>
										<RequestTag>_</RequestTag>
										<VersionId>2</VersionId>
									</MessageHeader>
									<MessageBody>
										<Customer>
											<Id>1</Id>
											<Name>Deppisch</Name>
											<Firstname>Christoph</Firstname>
										</Customer>
									</MessageBody>
								</ResponseMessage>	
							
						]]></data>
                    <element path="//ResponseMessage/MessageHeader/RequestTag" value="${requestTag}"/>
                    <element path="//ResponseMessage/MessageHeader/ConversationId" value="${conversationId}"/>
                    <ignore path="//ResponseMessage/MessageHeader/Timestamp"/>
                </message>
                <extract>
                    <header name="Operation" variable="${operation}"/>
                    <header name="RequestTag" variable="${requestTag}"/>
                </extract>
            </receive>
        </actions>
    </testcase>
</spring:beans>